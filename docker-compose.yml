volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:
  qdrant_storage:
  open-webui:

networks:
  demo:
    driver: bridge

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks:
    - demo
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - OLLAMA_HOST=ollama:11434
    - N8N_RUNNERS_ENABLED=true
    - N8N_HOST=0.0.0.0
    - N8N_PORT=5678
    - N8N_PROTOCOL=http
    - N8N_SECURE_COOKIE=false
    - N8N_EDITOR_BASE_URL=http://100.114.38.122:5678
    - WEBHOOK_URL=http://100.114.38.122:5678
  ports:
    - "5678:5678"
  labels:
    - "com.centurylinklabs.watchtower.enable=true"

x-ollama: &service-ollama
  image: ollama/ollama:latest
  container_name: ollama
  networks:
    - demo
  restart: unless-stopped
  volumes:
    - ollama_storage:/root/.ollama
  labels:
    - "com.centurylinklabs.watchtower.enable=true"
  environment:
    - OLLAMA_HOST=0.0.0.0
  ports:
    - "11434:11434"

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  networks:
    - demo
  container_name: ollama-pull-llama
  volumes:
    - ollama_storage:/root/.ollama
  entrypoint: /bin/sh
  environment:
    - OLLAMA_HOST=0.0.0.0
  command:
    - "-c"
    - "sleep 3; ollama pull llama3.2"
  labels:
    - "com.centurylinklabs.watchtower.enable=true"

services:
  postgres:
    image: postgres:16-alpine
    hostname: postgres
    networks:
      - demo
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  n8n:
    <<: *service-n8n
    hostname: n8n
    container_name: n8n
    restart: unless-stopped
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared
    depends_on:
      postgres:
        condition: service_healthy
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  qdrant:
    image: qdrant/qdrant
    hostname: qdrant
    container_name: qdrant
    networks:
      - demo
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  ollama-cpu:
    profiles: ["cpu"]
    <<: *service-ollama

  ollama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *service-ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  ollama-gpu-amd:
    profiles: ["gpu-amd"]
    <<: *service-ollama
    image: ollama/ollama:rocm
    devices:
      - "/dev/kfd"
      - "/dev/dri"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  ollama-pull-llama-cpu:
    profiles: ["cpu"]
    <<: *init-ollama
    depends_on:
      - ollama-cpu
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  ollama-pull-llama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *init-ollama
    depends_on:
      - ollama-gpu
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  ollama-pull-llama-gpu-amd:
    profiles: ["gpu-amd"]
    <<: *init-ollama
    image: ollama/ollama:rocm
    depends_on:
     - ollama-gpu-amd
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  webuigpu:
    image: ghcr.io/open-webui/open-webui:cuda
    container_name: open-webui
    networks:
      - demo
    restart: always
    environment:
      - OLLAMA_BASE_URL=http://100.114.38.122:11434
    volumes:
      - open-webui:/app/backend/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    depends_on:
      - ollama-gpu
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    networks:
      - demo
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 * * *" --cleanup --restart=always --stop-timeout 30s
